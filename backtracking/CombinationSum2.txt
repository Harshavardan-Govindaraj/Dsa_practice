class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res=new ArrayList<>();
        Arrays.sort(candidates);
        helper(res,new ArrayList<>(),candidates,target,0);
        return res;
    }
    void helper( List<List<Integer>> res,List<Integer> temp,int arr[],int target,int i)
    {
          if(target==0){
            res.add(new ArrayList<>(temp));
            return;
            }
         if(target<0)return;
        
        for(int j=i;j<arr.length;j++)
        {
            if(j>i && arr[j]==arr[j-1]) continue;
            if(arr[j]>target) break;
            temp.add(arr[j]);
            helper(res,temp,arr,target-arr[j],j+1);
            temp.remove(temp.size()-1);

        }
    }
}